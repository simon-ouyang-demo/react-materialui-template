{"version":3,"sources":["types/error.ts","types/index.ts","pages/ErrorPage.tsx","pages/WelcomePage.tsx","hooks/useTheme.tsx","routers/MainRouter.tsx"],"names":["PageError","ErrorPage","type","isForbidden","NotFound","Forbidden","Box","textAlign","component","Container","maxWidth","Typography","variant","color","my","Button","Link","to","WelcomePage","setThemeName","useContext","ThemeContext","container","alignContent","justify","item","onClick","MainRouter","url","match","path","exact"],"mappings":"8HAAO,IAAKA,EAAZ,kC,SAAYA,K,gBAAAA,E,gBAAAA,M,2DCAZ,iE,iKCkCeC,EAxBqB,SAAC,GAAmC,IAAD,IAAhCC,KAC/BC,QAD+D,MAAzBH,YAAUI,SAAe,KACxCJ,YAAUK,UACvC,OACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,SAASC,UAAWC,IAAWC,SAAS,MACrD,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,WAC5BV,EAAc,YAAc,iBAE/B,kBAACG,EAAA,EAAD,CAAKQ,GAAI,GACNX,EACC,kBAACQ,EAAA,EAAD,6CAEA,oCACE,kBAACA,EAAA,EAAD,mDACA,kBAACA,EAAA,EAAD,8CAIN,kBAACI,EAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,UAAUL,UAAWQ,IAAMC,GAAG,KAAhE,oB,iBCxBN,IA6BeC,EA7BK,WAChB,IAAMC,ECADC,qBAAWC,KDChB,OAAQ,oCACR,kBAAC,IAAD,CAAMC,WAAS,EAACC,aAAa,SAASC,QAAQ,UAC1C,kBAAC,IAAD,CAAYZ,QAAQ,MAApB,2BAEJ,kBAAC,IAAD,CAAMU,WAAS,EAACC,aAAa,SAASC,QAAQ,UAC1C,kBAAC,IAAD,CAAMC,MAAI,GACN,kBAAC,IAAD,CACAb,QAAQ,YACRC,MAAM,UACNa,QAAS,kBAAMP,EAAa,gBAH5B,oBAQJ,kBAAC,IAAD,CAAMM,MAAI,GACN,kBAAC,IAAD,CACAb,QAAQ,YACRC,MAAM,YACNa,QAAS,kBAAMP,EAAa,eAH5B,sBEXG,SAASQ,EAAT,GAAsD,IAAvBC,EAAsB,EAA/BC,MAASD,IAC5C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAMF,EAAKG,OAAK,GACrB,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD","file":"static/js/3.74610269.chunk.js","sourcesContent":["export enum PageError {\n  Forbidden = '403',\n  NotFound = '404',\n}","export * from './error'\nexport * from './common'","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Box, Button, Container, Typography } from '@material-ui/core'\n\nimport { PageError } from '../types'\n\ninterface IProps {\n  type?: PageError\n}\n\nconst ErrorPage: React.FC<IProps> = ({ type = PageError.NotFound }) => {\n  const isForbidden = type === PageError.Forbidden\n  return (\n    <Box textAlign=\"center\" component={Container} maxWidth=\"md\">\n      <Typography variant=\"h3\" color=\"primary\">\n        {isForbidden ? 'Forbidden' : '404 Not Found'}\n      </Typography>\n      <Box my={3}>\n        {isForbidden ? (\n          <Typography>You do not have access to this page.</Typography>\n        ) : (\n          <>\n            <Typography>The page you requested could not be found.</Typography>\n            <Typography>Please check the URL and try again.</Typography>\n          </>\n        )}\n      </Box>\n      <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\">\n        Return to Home\n      </Button>\n    </Box>\n  )\n}\n\nexport default ErrorPage\n","import React from 'react'\nimport { Typography, Grid, Button } from '../components/common'\nimport { useTheme } from '../hooks'\nconst WelcomePage = () => {\n    const setThemeName = useTheme()\n    return (<>\n    <Grid container alignContent=\"center\" justify=\"center\">\n        <Typography variant=\"h3\">Welcome to Return Bear</Typography>\n    </Grid> \n    <Grid container alignContent=\"center\" justify=\"center\">\n        <Grid item>\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setThemeName(\"lightTheme\")}\n            >\n            Set Light Theme\n            </Button>\n        </Grid>\n        <Grid item>\n            <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => setThemeName(\"darkTheme\")}\n            >\n            Set Dark Theme\n            </Button>\n        </Grid>\n    </Grid> \n    </>)\n}\n\nexport default WelcomePage","import { useContext } from 'react'\nimport { ThemeContext } from '../contexts'\n\nexport default function useAuthContext() {\n  return useContext(ThemeContext)\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { RouterProps } from '../types'\nimport { ErrorPage } from '../pages'\nimport {\n    WelcomePage\n} from '../pages'\n\nexport default function MainRouter({ match: { url } }: RouterProps) {\n  return (\n    <Switch>\n      <Route path={url} exact>\n        <WelcomePage />\n      </Route>\n      <Route>\n        <ErrorPage />\n      </Route>\n    </Switch>\n  )\n}"],"sourceRoot":""}